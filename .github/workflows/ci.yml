name: ci

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.kind }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      matrix:
        os: [macOS-latest, windows-2019, ubuntu-16.04]
        kind: ["test", "lint"]

    steps:
      - name: Clone repository
        uses: actions/checkout@v1

      - name: Install rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: "1.40.0"

      - name: Install clippy and rustfmt
        if: matrix.kind == 'lint'
        run: |
          rustup component add clippy
          rustup component add rustfmt

      - name: Install Deno
        uses: denolib/setup-deno@master
        with:
          deno-version: 0.x

      - name: Environment (common)
        run: |
          echo ::set-env name=GH_ACTIONS::1
          echo ::set-env name=RUSTC_WRAPPER::sccache
          echo ::set-env name=DENO_BUILD_MODE::release
          echo ::set-env name=RUST_BACKTRACE::full

      - name: Log versions
        run: |
          node -v
          rustc --version
          cargo --version

      - name: Clippy
        if: matrix.kind == 'lint'
        run: cargo clippy --all-targets --release --locked -- -D clippy::all

      - name: Build
        if: matrix.kind == 'test'
        run: cargo build --release --locked --all-targets

      - name: Test Rust
        if: matrix.kind == 'test'
        run: cargo test --release --locked --all-targets

      - name: Test TS
        if: matrix.kind == 'test'
        run: deno run -A ./test.ts