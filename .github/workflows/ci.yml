name: ci

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.kind }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      matrix:
        os: [macOS-latest, windows-2019, ubuntu-16.04]
        kind: ["test", "lint"]

    steps:
      - name: Clone repository
        uses: actions/checkout@v1

      - name: Install rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: "1.43.0"

      - name: Install clippy and rustfmt
        if: matrix.kind == 'lint'
        run: |
          rustup component add clippy
          rustup component add rustfmt

      - name: Install Deno
        uses: denolib/setup-deno@master
        with:
          deno-version: 1.0.0

      - name: Start MongoDB (MacOs)
        if: matrix.kind == 'test' && startsWith(matrix.os, 'mac')
        run: |
          brew tap mongodb/brew
          brew install mongodb-community@4.2
          brew services start mongodb-community@4.2

      - name: Start MongoDB (Linux)
        if: matrix.kind == 'test' && startsWith(matrix.os, 'ubuntu')
        uses: wbari/start-mongoDB@v0.2
        with:
          mongoDBVersion: 4.2

      - name: Start MongoDB (Windows)
        if: matrix.kind == 'test' && startsWith(matrix.os, 'windows')
        run: |
          choco install mongodb --version=4.2.0 --no-progress
          "C:\Program Files\MongoDB\Server\4.2.0\bin\mongo.exe"

      - name: Environment (common)
        run: |
          echo ::set-env name=GH_ACTIONS::1
          echo ::set-env name=DENO_BUILD_MODE::release
          echo ::set-env name=RUST_BACKTRACE::full
      - name: Log versions
        run: |
          node -v
          rustc --version
          cargo --version

      - name: Configure cargo data directory
        run: echo "::set-env name=CARGO_HOME::$(pwd)/.cargo_home"

      - name: Cache
        uses: denoland/github-actions-cache@stable-prerelease
        with:
          path: |-
            .cargo_home
            target/*/.*
            target/*/build
            target/*/deps
          key:
            ${{ matrix.os }}-${{ matrix.kind }}-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.kind }}-

      - name: Install python
        uses: actions/setup-python@v1
        with:
          python-version: "2.7.x"
          architecture: x64

      - name: Clippy
        if: matrix.kind == 'lint'
        run: cargo clippy --all-targets --release --locked -- -D clippy::all
      - name: Build
        if: matrix.kind == 'test'
        run: cargo build --release --locked --all-targets
      - name: Test Rust
        if: matrix.kind == 'test'
        run: cargo test --release --locked --all-targets
      - name: Test TS
        if: matrix.kind == 'test'
        run: deno test -A --unstable ./test.ts

      - name: Release
        uses: softprops/action-gh-release@v1
        if: matrix.kind == 'test' && startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            target/release/libdeno_mongo.dylib
            target/release/libdeno_mongo.so
            target/release/deno_mongo.dll